# Generated by roxygen2: do not edit by hand

S3method(as.data.frame,pool)
S3method(draws,approxbayes)
S3method(draws,bayes)
S3method(draws,condmean)
S3method(impute,condmean)
S3method(impute,random)
S3method(pool_,bootstrap)
S3method(pool_,jackknife)
S3method(pool_,rubin)
S3method(print,analysis)
S3method(print,draws)
S3method(print,imputation)
S3method(print,pool)
S3method(validate,analysis)
S3method(validate,bootstrap)
S3method(validate,draws)
S3method(validate,imputation)
S3method(validate,imputation_list)
S3method(validate,imputation_single)
S3method(validate,ivars)
S3method(validate,jackknife)
S3method(validate,references)
S3method(validate,rubin)
S3method(validate,sample_list)
S3method(validate,sample_single)
S3method(validate,stan_data)
export(add_class)
export(analyse)
export(ancova)
export(apply_delta)
export(as_class)
export(delta_lagscale)
export(delta_template)
export(draws)
export(expand)
export(expand_locf)
export(extract_imputed_dfs)
export(fill_locf)
export(getStrategies)
export(has_class)
export(impute)
export(ivars)
export(locf)
export(longDataConstructor)
export(method_approxbayes)
export(method_bayes)
export(method_condmean)
export(pool)
export(pool_)
export(strategy_CIR)
export(strategy_CR)
export(strategy_JR)
export(strategy_LMCF)
export(strategy_MAR)
export(validate)
export(validate_analyse_pars)
import(R6)
import(Rcpp)
import(methods)
importFrom(assertthat,assert_that)
importFrom(glmmTMB,VarCorr)
importFrom(glmmTMB,fixef)
importFrom(glmmTMB,getME)
importFrom(glmmTMB,glmmTMB)
importFrom(glmmTMB,glmmTMBControl)
importFrom(rstan,extract)
importFrom(rstan,get_bfmi)
importFrom(rstan,get_divergent_iterations)
importFrom(rstan,get_max_treedepth_iterations)
importFrom(rstan,sampling)
importFrom(rstan,summary)
importFrom(stats,as.formula)
importFrom(stats,coef)
importFrom(stats,df.residual)
importFrom(stats,lm)
importFrom(stats,model.matrix)
importFrom(stats,optim)
importFrom(stats,pnorm)
importFrom(stats,pt)
importFrom(stats,qnorm)
importFrom(stats,qt)
importFrom(stats,quantile)
importFrom(stats,reformulate)
importFrom(stats,rnorm)
importFrom(stats,sd)
importFrom(stats,setNames)
importFrom(stats,terms)
importFrom(stats,var)
importFrom(stats,vcov)
importFrom(utils,capture.output)
useDynLib(rbmi, .registration = TRUE)
